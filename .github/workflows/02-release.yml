name: Release

on:
  workflow_call:
    inputs:
      os:
        required: false
        type: string
        default: ubuntu-latest
      nuget_feed:
        required: false
        type: string
      nuget_username:
        required: false
        type: string
    secrets:
      nuget_password:
        required: false
    outputs:
      version:
        value: ${{ jobs.release.outputs.version }}
      environment:
        value: ${{ jobs.release.outputs.environment }}

jobs:

  release:
    name: Release
    runs-on: ${{ inputs.os }}
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      NUGET_CERT_REVOCATION_MODE: offline
      DOTNET_NUGET_SIGNATURE_VERIFICATION: false
    steps:

    - name: Checkout Repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true

    - name: Add NuGet Source
      if: ${{ inputs.nuget_feed != '' }}
      shell: bash
      run: >
        dotnet nuget add source
        --username "${{ inputs.nuget_username }}"
        --password "${{ secrets.nuget_password }}"
        --store-password-in-clear-text
        "${{ inputs.nuget_feed }}"

    - name: Install Surveyor
      run: dotnet tool install --global Surveyor --prerelease

    - name: Determine Version
      id: set-version
      run: |
        LATEST_VERSION=$(Surveyor version)
        echo "LATEST_VERSION: ${LATEST_VERSION}"

        if [[ "${LATEST_VERSION}" == "" ]]
        then
          echo "version=" >> $GITHUB_OUTPUT
        else
          echo "version=${LATEST_VERSION}" >> $GITHUB_OUTPUT
        fi

    - name: Create Release Notes
      if: ${{ steps.set-version.outputs.version != '' }}
      run: |
        mkdir artifacts
        Surveyor release-notes > artifacts/RELEASE_NOTES.md
        cat artifacts/RELEASE_NOTES.md

    - name: Create Release
      if: ${{ steps.set-version.outputs.version != '' }}
      env:
        GH_TOKEN: ${{ github.token }}
      run: >
        gh release create
        "v${{ steps.set-version.outputs.version }}"
        --notes-file artifacts/RELEASE_NOTES.md
        --draft

    - name: Determine Environment
      id: set-environment
      run: |
        if [[ "${{ github.ref_name }}" == "alpha" ]]
        then
          echo "environment=Development" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref_name }}" == "beta" ]]
        then
          echo "environment=Staging" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref_name }}" == "main" ]]
        then
          echo "environment=Production" >> $GITHUB_OUTPUT
        else
          echo "environment=" >> $GITHUB_OUTPUT
        fi

    - name: Read
      run: |
        echo "Version: ${{ steps.set-version.outputs.version }}"
        echo "Environment: ${{ steps.set-environment.outputs.environment }}"
