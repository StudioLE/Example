name: CI/CD

on:
  push:

jobs:

  test-ubuntu:
    name: Ubuntu
    uses: ./.github/workflows/01-test.yml
    with:
      project: ""
      os: ubuntu-latest
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  test-windows:
    name: Windows
    if: ${{ github.ref_type == 'branch' && contains(fromJSON('["main", "beta"]'), github.ref_name) }}
    uses: ./.github/workflows/01-test.yml
    with:
      project: ""
      os: windows-latest
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  release:
    name: Release
    if: ${{ github.ref_type == 'branch' && contains(fromJSON('["main", "alpha", "beta"]'), github.ref_name) }}
    needs:
    - test-ubuntu
    uses: ./.github/workflows/02-release.yml

  push:
    name: Push
    needs:
    - release
    uses: ./.github/workflows/03-push.yml
    with:
      project: ""
      version: ${{ needs.release.outputs.version }}
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  publish:
    name: Publish
    needs:
    - release
    uses: ./.github/workflows/04-publish.yml
    strategy:
      matrix:
        runtime:
        - win-x64
        - linux-x64
    with:
      project: StudioLE.Example.Cli/src/StudioLE.Example.Cli.csproj
      version: ${{ needs.release.outputs.version }}
      runtime: ${{ matrix.runtime }}
      npm: ""
      workload: ""
      name: StudioLE.Example-${{ needs.release.outputs.version }}-${{ matrix.runtime }}
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  environment:
    name: Environment
    needs:
    - release
    - push
    - publish
    runs-on: ubuntu-latest
    environment: ${{ needs.release.outputs.environment }}
    steps:
    - run: |
        echo "Environment: ${{ needs.release.outputs.environment }}"
