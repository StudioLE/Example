name: CI/CD

on:
  push:

jobs:

  build-ubuntu:
    name: Ubuntu
    uses: ./.github/workflows/01-build.yml
    with:
      project: ""
      os: ubuntu-latest
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
      pack: true
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  build-windows:
    name: Windows
    if: ${{ github.ref_type == 'branch' && contains(fromJSON('["main", "beta", "alpha"]'), github.ref_name) }}
    uses: ./.github/workflows/01-build.yml
    with:
      project: ""
      os: windows-latest
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  release:
    name: Release
    if: ${{ github.ref_type == 'branch' && contains(fromJSON('["main", "alpha", "beta"]'), github.ref_name) }}
    needs:
    - build-ubuntu
    uses: ./.github/workflows/02-release.yml
    with:
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  push-packages:
    name: Push NuGet Packages
    needs:
    - release
    uses: ./.github/workflows/03-push-to-nuget.yml
    with:
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  push-tests:
    name: Push Test Results
    if: ${{ always() }}
    needs:
    - build-ubuntu
    uses: ./.github/workflows/03-push-to-repo.yml
    with:
      repo: StudioLE/Tests
      artifact: Tests-Linux-X64
      rm: "${{ github.repository }}/${{ github.run_id }}"
      path: "${{ github.repository }}/${{ github.run_id }}"
      message: "feat(${{ github.repository }}): Added test results for ${{ github.sha }}"
    secrets:
      repo_token: ${{ secrets.TESTS_TOKEN }}

  publish:
    name: Publish
    needs:
    - release
    uses: ./.github/workflows/04-publish.yml
    strategy:
      matrix:
        runtime:
        - win-x64
        - linux-x64
    with:
      project: StudioLE.Example.Cli/src/StudioLE.Example.Cli.csproj
      runtime: ${{ matrix.runtime }}
      npm: ""
      workload: ""
      name: StudioLE.Example-${{ needs.release.outputs.version }}-${{ matrix.runtime }}
      version: ${{ needs.release.outputs.version }}
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  documentation:
    name: Documentation
    if: ${{ needs.release.outputs.version != '' }}
    needs:
    - release
    uses: ./.github/workflows/05-documentation.yml
    with:
      project: ""
      os: ubuntu-latest
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
      environment: ${{ needs.release.outputs.environment }}
      source: "*/src/bin/Release/*/StudioLE.*.dll"
      section: "example"
      version: ${{ needs.release.outputs.version }}
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}
      documentation_token: ${{ secrets.DOCUMENTATION_TOKEN }}

  environment:
    name: Environment
    if: ${{ needs.release.outputs.environment != '' }}
    needs:
    - release
    runs-on: ubuntu-latest
    environment: ${{ needs.release.outputs.environment }}
    steps:
    - run: |
        echo "Environment: ${{ needs.release.outputs.environment }}"
