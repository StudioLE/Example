name: Documentation

on:
  workflow_call:
    inputs:
      os:
        required: false
        type: string
        default: ubuntu-latest
      project:
        required: false
        type: string
      nuget_feed:
        required: false
        type: string
      nuget_username:
        required: false
        type: string
      latest:
        required: false
        type: string
        default: ""
      source:
        required: true
        type: string
      section:
        required: true
        type: string
    secrets:
      nuget_password:
        required: false

jobs:

  documentation:
    name: Documentation
    runs-on: ${{ inputs.os }}
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      NUGET_CERT_REVOCATION_MODE: offline
      DOTNET_NUGET_SIGNATURE_VERIFICATION: false
    steps:

    - name: Checkout Repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true

    - name: Add NuGet Source
      if: ${{ inputs.nuget_feed != '' }}
      shell: bash
      run: >
        dotnet nuget add source
        --username "${{ inputs.nuget_username }}"
        --password "${{ secrets.nuget_password }}"
        --store-password-in-clear-text
        "${{ inputs.nuget_feed }}"

    - name: Install Surveyor
      run: dotnet tool install --global Surveyor --prerelease

    - name: Determine Version
      id: set-version
      run: |
        LATEST_VERSION=$(Surveyor version)
        echo "LATEST_VERSION: ${LATEST_VERSION}"

        if [[ "${LATEST_VERSION}" == "" ]]
        then
          echo "version=" >> $GITHUB_OUTPUT
        else
          echo "version=${LATEST_VERSION}" >> $GITHUB_OUTPUT
        fi

    - name: Build
      run: >
        dotnet build "${{ inputs.project }}"
        --configuration "Release"
        -p:ContinuousIntegrationBuild=true
        -p:PublishRepositoryUrl=true
        -p:EmbedUntrackedSources=true
        -p:IncludeSymbols=true
        -p:SymbolPackageFormat=snupkg
        -p:GeneratePackageOnBuild=true
        -p:GenerateDocumentationFile=true
        -p:ProduceReferenceAssembly=true
        -p:CopyLocalLockFileAssemblies=true
        -p:SurveyorFeed="${{ inputs.nuget_feed }}"
        -p:SurveyorToken="${{ secrets.nuget_password }}"
        --nologo
        --verbosity minimal

    - name: Install Illuminate
      run: dotnet tool install --global Illuminate --prerelease

    - name: Make Directory
      run: mkdir -p artifacts

    - name: Generate v${{ steps.set-version.outputs.version }} Documentation
      working-directory: artifacts
      run: >
        Illuminate generate
        "../${{ inputs.source }}"
        --section "${{ inputs.section }}"
        --version "v${{ steps.set-version.outputs.version }}"

    - name: Generate Latest Documentation
      if: ${{ inputs.latest == 'true' }}
      working-directory: artifacts
      run: >
        Illuminate generate
        "../${{ inputs.source }}"
        --section "${{ inputs.section }}"
        --version "latest"

    - name: List
      run: ls -R1 artifacts

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Documentation
        path: artifacts


